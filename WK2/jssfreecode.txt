1 function welcomeToBooleans() {

  // Only change code below this line

  return true; // Change this line


  // Only change code above this line
}


2 function trueOrFalse(wasThatTrue) {
  if (wasThatTrue){
    return "Yes, that was true";
  }
    return "No, that was false";
}


3 function testEqual(val) {
  if (val == 12) { // Change this line
    return "Equal";
  }
  return "Not Equal";
}

testEqual(10);

4 function testStrict(val) {
  if (val === 7) { // Change this line
    return "Equal";
  }
  return "Not Equal";
}
testStrict(10);



5 function compareEquality(a, b) {
  if (a === b) { // Change this line
    return "Equal";
  }
  return "Not Equal";
}

compareEquality(10, "10");


6 function testNotEqual(val) {
  if (val != 99) { // Change this line
    return "Not Equal";
  }
  return "Equal";
}

testNotEqual(10);

7 function testStrictNotEqual(val) {
  if (val !== 17) { // Change this line
    return "Not Equal";
  }
  return "Equal";
}

testStrictNotEqual(10);


8 function testGreaterThan(val) {
  if (val > 100) {  // Change this line
    return "Over 100";
  }

  if (val >10) {  // Change this line
    return "Over 10";
  }

  return "10 or Under";
}

testGreaterThan(10);

9 function testGreaterOrEqual(val) {
  if (val >= 20) {  // Change this line
    return "20 or Over";
  }

  if (val >=10) {  // Change this line
    return "10 or Over";
  }

  return "Less than 10";
}

testGreaterOrEqual(10);

10 function testLessThan(val) {
  if (val < 25) {  // Change this line
    return "Under 25";
  }

  if (val<55) {  // Change this line
    return "Under 55";
  }

  return "55 or Over";
}

testLessThan(10);

11 function testLessOrEqual(val) {
  if (val<=12) {  // Change this line
    return "Smaller Than or Equal to 12";
  }

  if (val<=24) {  // Change this line
    return "Smaller Than or Equal to 24";
  }

  return "More Than 24";
}

testLessOrEqual(10);

12 function testLogicalAnd(val) {
  // Only change code below this line

  if (val <= 50 && val >=25 ) {
  
  return "Yes";
  }
  // Only change code above this line
  return "No";
}

testLogicalAnd(10);

13function testLogicalOr(val) {
  // Only change code below this line

  if (val >20 || val <10) {
    return "Outside";
  }

  
    return "Inside";
  

  // Only change code above this line
}

testLogicalOr(15);

14 function testElse(val) {
  var result = "";
  // Only change code below this line

  if (val > 5) {
    result = "Bigger than 5";
  }else{
    result = "5 or Smaller"
  }

  

  // Only change code above this line
  return result;
}

testElse(4);


15function testElseIf(val) {
  if (val > 10) {
    return "Greater than 10";
  } else if (val < 5) {
    return "Smaller than 5";
  } else {
    return "Between 5 and 10";
  }
}

// Change this value to test
testElseIf(7);



16 function orderMyLogic(val) {
  if (val < 5) {
    return "Less than 5";
  } else if (val < 10) {
    return "Less than 10";
  } else {
    return "Greater than or equal to 10";
  }
}

orderMyLogic(7);


17function testSize(num) {
  // Only change code below this line
if (num < 5) {
    return "Tiny";
  } else if (num < 10) {
    return "Small";
  } else if (num < 15) {
    return "Medium";
  } else if (num < 20) {
    return "Large";
  } else {
    return "Huge";

  }
  // Only change code above this line
}

testSize(7);


18function golfScore(par, strokes) {
  // Only change code below this line
  if (strokes == 1) {
    return "Hole-in-one!";
  } else if (strokes <= par - 2) {
    return "Eagle";
  } else if (strokes == par - 1) {
    return "Birdie";
  } else if (strokes == par) {
    return "Par";
  } else if (strokes == par + 1) {
    return "Bogey";
  } else if (strokes == par + 2) {
    return "Double Bogey";
  } else {
    return "Go Home!";
  }
}
golfScore(5, 4);

------------------------------------------------------------------------------------

1 function caseInSwitch(val) {
  var answer = "";
  // Only change code below this line
  switch (val) {
    case 1:
      return "alpha";
      break;
    case 2:
      return "beta";
      break;
    case 3:
      return "gamma";
      break;
    case 4:
      return "delta";
      break;
  }

  // Only change code above this line
  return answer;
}

// Change this value to test
caseInSwitch(1);

2 function switchOfStuff(val) {
  var answer = "";

  switch (val) {
    case "a":
      answer = "apple";
      break;
    case "b":
      answer = "bird";
      break;
    case "c":
      answer = "cat";
      break;
    default:
      answer = "stuff";
  }

  return answer;
}


3 function sequentialSizes(val) {
  var answer = "";
  // Only change code below this line
switch(val) {
  case 1:
    case 2:
    case 3:
      return "Low";
      break;
    case 4:
    case 5:
    case 6:
      return "Mid";
      break;
    case 7:
    case 8:
    case 9:
      return "High";
      break;
  }  // Only change code above this line
  return answer;
}

sequentialSizes(1);

4 function chainToSwitch(val) {
  var answer = "";
  // Only change code below this line
    switch (val){
case "bob":
    answer = "Marley";
    break;
  case 42:
    answer = "The Answer";
    break;
  case 1:
    answer = "There is no #1";
    break;
  case 99:
    answer = "Missed me by this much!";
    break;
  case 7:
    answer = "Ate Nine";
    break;
    }
  // Only change code above this line
  return answer;
}

chainToSwitch(7);

----------------------------------------------------------------------

1function reusableFunction() {
  console.log("Hi World");
}
reusableFunction();


2 function functionWithArgs(a,b) {
  console.log(a+b);
}
functionWithArgs(1,2);
functionWithArgs(7,9); 


3 var myGlobal = 10;// Declare the myGlobal variable below this line
function fun1() {
  oopsGlobal = 5;
}
function fun2() {
  var output = "";
  if (typeof myGlobal != "undefined") {
    output += "myGlobal: " + myGlobal;
  }
  if (typeof oopsGlobal != "undefined") {
    output += " oopsGlobal: " + oopsGlobal;
  }
  console.log(output);
}


4 function myLocalScope() {
var myVar;
  // Only change code below this line

  console.log('inside myLocalScope', myVar);
}
myLocalScope();
console.log('outside myLocalScope', myVar);


5
var outerWear = "T-Shirt";
function myOutfit() {
var outerWear = "sweater";
return outerWear;
}
myOutfit();


6  function timesFive(num) {
  return num *5;
}


7  var sum = 0;
function addThree() {
  sum = sum + 3;
}
function addFive(){
  sum =sum+5 ;
}
addThree();
addFive();

8
var processed = 0;
processed = processArg(7);
function processArg(num) {
  return (num + 3) / 5;
}


9 function nextInLine(arr, item) {
  // Only change code below this line
  arr.push(item);
  var removed = arr.shift();
  return removed; // Change this line
}
  // Only change code above this line
// Setup
var testArr = [1,2,3,4,5];

// Display code
console.log("Before: " + JSON.stringify(testArr));
console.log(nextInLine(testArr, 6));
console.log("After: " + JSON.stringify(testArr));


--------------------------------------------------------------------------------------------------------


1 function isLess(a, b) {
  // Only change code below this line
  return a<=b;
  
  // Only change code above this line
}

isLess(10, 15); 


2 // Setup
function abTest(a, b) {
  // Only change code below this line
if (a < 0 || b < 0) {
    return undefined;
  }
  return Math.round(Math.pow(Math.sqrt(a) + Math.sqrt(b), 2));
}
abTest(2,2);


3 var count = 0;
function cc(card) {
 switch (card) {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      count++;
      break;
    case 10:
    case "J":
    case "Q":
    case "K":
    case "A":
      count--;
      break;
  }
  if (count > 0) {
    return count + " Bet";
  } else {
    return count + " Hold";
  }
}
cc(2); cc(3); cc(7); cc('K'); cc('A');


-------------------------------------------------------------------------------------

1const magic = () => {
  "use strict";
  return new Date();
};

2 const myConcat = (arr1, arr2) => {
  return arr1.concat(arr2);
};

console.log(myConcat([1, 2], [3, 4, 5]));

3
const increment = (number, value=1) => number + value;
console.log(increment(5, 2));
console.log(increment(5));